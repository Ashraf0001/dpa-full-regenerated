name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        rust-version: [1.70, stable]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Rust ${{ matrix.rust-version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        override: true
    
    - name: Install Rust dependencies
      run: |
        rustup component add rustfmt clippy
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Build Rust project
      run: |
        cargo build --verbose
    
    - name: Run Rust tests
      run: |
        cargo test --verbose
    
    - name: Build Python bindings
      run: |
        maturin build --release
    
    - name: Install Python package
      run: |
        pip install target/wheels/*.whl
    
    - name: Run Python tests
      run: |
        python -m pytest tests/ -v --cov=dpa_core --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Install dependencies
      run: |
        pip install black flake8 mypy
        rustup component add rustfmt clippy
    
    - name: Run Rust linter
      run: |
        cargo clippy -- -D warnings
    
    - name: Run Rust formatter check
      run: |
        cargo fmt -- --check
    
    - name: Run Python linter
      run: |
        flake8 python/ tests/
    
    - name: Run Python type checker
      run: |
        mypy python/ tests/
    
    - name: Run Python formatter check
      run: |
        black --check python/ tests/
